language: es
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/binary_sensor/
      # Battery
      - sentences:
          - "está[n] [la(s) batería(s)] <name> {bs_battery_states:state} [<area>]"
          - "está[n] {bs_battery_states:state} [la(s) batería(s)] <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "(hay) alguna[s] batería[s] {bs_battery_states:state} [<area>]"
          - "(hay) {bs_battery_states:state} alguna(s) batería(s) [<area>]"
          - "está[n] alguna[s] batería[s] {bs_battery_states:state}[s] [<area>]"
          - "está[n] {bs_battery_states:state}[s] alguna[s] batería[s] [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "están todas las baterías {bs_battery_states:state} [<area>]"
          - "están {bs_battery_states:state} todas las baterías [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "(qué|cual|cuales) batería[s] (hay|está[n]) {bs_battery_states:state} [<area>]"
          - "(qué|cual|cuales) batería[s] <area> (hay|está[n]) {bs_battery_states:state}"
        response: which
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "cuántas baterías (hay|están) {bs_battery_states:state} [<area>]"
          - "cuántas baterías {bs_battery_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: battery

      # Battery charging
      - sentences:
          - "está[n] [la(s) batería(s)] <name> {bs_battery_charging_states:state} [<area>]"
          - "está[n] {bs_battery_charging_states:state} [la(s) batería(s)] <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery_charging
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "(hay) alguna[s] batería[s] {bs_battery_charging_states:state} [<area>]"
          - "(hay) {bs_battery_charging_states:state} alguna(s) batería(s) [<area>]"
          - "está[n] alguna[s] batería[s] {bs_battery_charging_states:state} [<area>]"
          - "está[n] {bs_battery_charging_states:state}[s] alguna[s] batería [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "están todas las baterías {bs_battery_charging_states:state} [<area>]"
          - "están {bs_battery_charging_states:state} todas las baterías [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "(qué|cual|cuales) batería[s] (hay|está[n]) {bs_battery_charging_states:state} [<area>]"
          - "(qué|cual|cuales) batería[s] <area> (hay|está[n]) {bs_battery_charging_states:state}"
        response: which
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "cuántas baterías (hay|están) {bs_battery_charging_states:state} [<area>]"
          - "cuántas baterías {bs_battery_charging_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: battery_charging

      # Carbon monoxide
      - sentences:
          - "está[n] <name> {bs_carbon_monoxide_states:state} [<area>]"
          - "está[n] {bs_carbon_monoxide_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: carbon_monoxide
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(hay) [algún|algunos] sensor[es] de monóxido de carbono {bs_carbon_monoxide_states:state}[s] [<area>]"
          - "(hay) {bs_carbon_monoxide_states:state}[s] [algún|algunos] sensor[es] de monóxido de carbono [<area>]"
          - "está[n] (algún|algunos) sensor[es] de monóxido de carbono {bs_carbon_monoxide_states:state}[s] [<area>]"
          - "está[n] {bs_carbon_monoxide_states:state}[s] (algún|algunos) sensor[es] de monóxido de carbono [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "hay [detección de] [algo de] monóxido de carbono <area>"
          - "(se detecta|se ha detectado|detecta[s]) [algo de] monóxido de carbono <area>"
        response: any
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide
          state: "on"

      - sentences:
          - "están todos los sensores de monóxido de carbono {bs_carbon_monoxide_states:state} [<area>]"
          - "están {bs_carbon_monoxide_states:state} todos los sensores de monóxido de carbono [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(qué|cual|cuales) sensor[es] de monóxido de carbono (hay|está[n]) {bs_carbon_monoxide_states:state} [<area>]"
          - "(qué|cual|cuales) sensor[es] de monóxido de carbono <area> (hay|está[n]) {bs_carbon_monoxide_states:state}"
        response: which
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "cuántos sensores de monóxido de carbono (hay|están) {bs_carbon_monoxide_states:state} [<area>]"
          - "cuántas sensored de monóxido de carbono {bs_carbon_monoxide_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      # Cold
      - sentences:
          - "está[n] <name> {bs_cold_states:state} [<area>]"
          - "está[n] {bs_cold_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: cold
        slots:
          domain: binary_sensor
          device_class: cold

      - sentences:
          - "(está[n]|hay) (algo|algún|algunos) sensor[es] frío[s] [<area>]"
          - "(hace|se detecta) frío [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "(qué|cual|cuales) [sensor[es]] (hay|está[n]) {bs_cold_states:state}[s] [<area>]"
          - "(qué|cual|cuales) sensor[es] <area> (hay|está[n]) {bs_cold_states:state}[s]"
        response: which
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "cuánt(o|a)s (cosas|sensores) (hay|están) {bs_cold_states:state} [<area>]"
          - "cuánt(o|a)s (cosas|sensores) {bs_cold_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      # Connectivity
      - sentences:
          - "está[n] <name> {bs_connectivity_states:state} [<area>]"
          - "está[n] {bs_connectivity_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: connectivity
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "(está[n]|hay) (algo|(algún|algunos) dispositivo[s]) {bs_connectivity_states:state} [<area>]"
          - "(está[n]|hay) {bs_connectivity_states:state} (algo|(algún|algunos) dispositivo[s]) [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "está[n] (todo|todos los dispositivos) {bs_connectivity_states:state}[s] [<area>]"
          - "está[n] {bs_carbon_monoxide_states:state}[s] (todo|todos los dispositivos) [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "(qué|cual|cuales) [dispositivo[s]] (hay|está[n]) {bs_connectivity_states:state}[s] [<area>]"
          - "(qué|cual|cuales) dispositivo[s] <area> (hay|está[n]) {bs_connectivity_states:state}[s]"
        response: which
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "cuántos dispositivos (hay|están) {bs_connectivity_states:state} [<area>]"
          - "cuántos dispositivos {bs_connectivity_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: connectivity

      # Door
      - sentences:
          - "está[n] <name> {bs_door_states:state} [<area>]"
          - "está[n] {bs_door_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: door
        slots:
          domain: binary_sensor
          device_class: door

      # Garage door
      - sentences:
          - "está[n] <name> {bs_garage_door_states:state} [<area>]"
          - "está[n] {bs_garage_door_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: garage_door
        slots:
          domain: binary_sensor
          device_class: garage_door

      # Gas
      - sentences:
          - "está[n] <name> {bs_gas_states:state} [<area>]"
          - "está[n] {bs_gas_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: gas
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "hay (algún|algunos) sensor[es] de gas {bs_gas_states:state} [<area>]"
          - "hay {bs_gas_states:state} (algún|algunos) sensor[es] de gas [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "(hay|se detecta|se está detectando) gas [detectado] <area>"
        response: any
        slots:
          domain: binary_sensor
          device_class: gas
          state: "on"

      - sentences:
          - "está[n] todos los sensores de gas {bs_gas_states:state} [<area>]"
          - "está[n] {bs_gas_states:state} todos los sensores de gas [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "(qué|cual|cuales) sensor[es] de gas (hay|está[n]) {bs_gas_states:state}[s] [<area>]"
          - "(qué|cual|cuales) sensor[es] de gas <area> (hay|está[n]) {bs_gas_states:state}[s]"
        response: which
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "cuántos sensores de gas (hay|están) {bs_gas_states:state} [<area>]"
          - "cuántos sensores de gas {bs_gas_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: gas

      # Heat
      - sentences:
          - "está[n] <name> {bs_heat_states:state} [<area>]"
          - "está[n] {bs_heat_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: heat
        slots:
          domain: binary_sensor
          device_class: heat

      - sentences:
          - "(está[n]|hay) (algo|algún|algunos) sensor[es] caliente[s] [<area>]"
          - "(hace|se detecta) calor [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "(qué|cual|cuales) (sensor[es]) (hay|está[n]) caliente[s] [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "cuánt(o|a)s (sensores|cosas) (hay|están) calientes [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      # Light
      - sentences:
          - "está[n] <name> {bs_light_states:state} [<area>]"
          - "está[n] {bs_light_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: light
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "(está[n]|hay) [alguna[s]] (luz|luces) {bs_light_states:state}[s] [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "están todas las luces {bs_light_states:state}[s] [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "(qué|cual|cuales) (luz|luces) (hay|está[n]) {bs_light_states:state}[s] [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "cuántas luces (hay|están) {bs_light_states:state} [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: light

      # Lock
      - sentences:
          - "está[n] <name> {bs_lock_states:state} [<area>]"
          - "está[n] {bs_lock_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: lock
        slots:
          domain: binary_sensor
          device_class: lock

      # Moisture
      - sentences:
          - "está[n] <name> {bs_moisture_states:state} [<area>]"
          - "está[n] {bs_moisture_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: moisture
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "(hay|está[n]) algún sensor de (agua|humedad|inundación) {bs_moisture_states:state} [<area>]"
          - "(hay|está[n]) {bs_moisture_states:state} algún sensor de (agua|humedad|inundación) [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "se detecta [algún|alguna] (inundación|(fuga|escape) de agua) [area]"
          - "está <area> inundad(a|o)"
        response: any
        slots:
          domain: binary_sensor
          device_class: moisture
          state: "on"

      - sentences:
          - "están todos los sensores de (agua|humedad|fugas) {bs_moisture_states:state}[s] [<area>]"
          - "están {bs_moisture_states:state}[s] todos los sensores de (agua|humedad|fugas) [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "(qué|cual[es]) sensores de (agua|humedad|fugas) (hay|está[n]) {bs_moisture_states:state} [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "cuántos sensores [de (agua|humedad|fugas)] (hay|está[n]) {bs_moisture_states:state} [<area>]"
          - "cuántos sensores [de (agua|humedad|fugas)] {bs_moisture_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: moisture

      # Motion
      - sentences:
          - "está[n] <name> {bs_motion_states:state} [<area>]"
          - "está[n] {bs_motion_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: motion
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "(está[n]|hay) [algún|algunos] sensor[es] de movimiento {bs_motion_states:state}[s] [<area>]"
          - "(está[n]|hay) {bs_motion_states:state}[s] [algún|algunos] sensor[es] de movimiento [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "hay [algún] movimiento [detectado] [<area>]"
          - "se detecta [algún] movimiento [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: motion
          state: "on"

      - sentences:
          - "(está[n]|hay) todos los sensores de movimiento {bs_motion_states:state}[s] [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "(qué|cual[es]) sensor[es] de movimiento (hay|está[n]) {bs_motion_states:state} [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "cuántos sensores de movimiento (están|hay) {bs_motion_states:state} [<area>]"
          - "cuántos sensores de movimiento {bs_motion_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: motion

      # Occupancy
      - sentences:
          - "está[n] <name> {bs_occupancy_states:state} [<area>]"
          - "está[n] {bs_occupancy_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: occupancy
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "(está[n]|hay) [algún|algunos] sensor[es] de ocupación {bs_motion_states:state}[s] [<area>]"
          - "(está[n]|hay) {bs_motion_states:state}[s] [algún|algunos] sensor[es] de ocupación [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "se detecta ocupación [<area>]"
          - "está <area> ocupad(a|o)"
        response: any
        slots:
          domain: binary_sensor
          device_class: occupancy
          state: "on"

      - sentences:
          - "están todos los sensores de ocupación {bs_motion_states:state}[s] [<area>]"
          - "están {bs_motion_states:state}[s] todos los sensor[es] de ocupación [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "(qué|cual[es]) sensor[es] de ocupación (hay|está[n]) {bs_motion_states:state} [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "cuántos sensores de ocupación (hay|está[n]) {bs_motion_states:state} [<area>]"
          - "cuántos sensores de ocupación {bs_motion_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: occupancy

      # Opening
      - sentences:
          - "está[n] <name> {bs_opening_states:state} [<area>]"
          - "está[n] {bs_opening_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: opening
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "(está[n]|hay) [alguna[s]] abertura[s] {bs_opening_states:state}[s] [<area>]"
          - "(está[n]|hay) {bs_opening_states:state}[s] [algúna[s]] aberturas [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "están todas las aberturas {bs_opening_states:state} [<area>]"
          - "están {bs_opening_states:state} todas las aberturas [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "(qué|cual[es]) aberturas (hay|están) {bs_opening_states:state} [<area>]"
          - "(qué|cual[es]) aberturas {bs_opening_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "cuántas aberturas (hay|están) {bs_opening_states:state} [<area>]"
          - "cuántas aberturas {bs_opening_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: opening

      # Plug
      - sentences:
          - "está[n] <name> {bs_plug_states:state} [<area>]"
          - "está[n] {bs_plug_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: plug
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "(hay|está[n]) (algo|[algún|algunos] dispositivo[s]) {bs_plug_states:state}[s] [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "está[n] (todo|todos los dispositivos) {bs_plug_states:state} [<area>]"
          - "está[n] {bs_plug_states:state} (todo|todos los dispositivos) [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "(qué|cual[es]) [dispositivos] (está[n]|hay) {bs_plug_states:state} [<area>]"
          - "(qué|cual[es]) [dispositivos] {bs_plug_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "cuántos dispositivos (hay|están) {bs_plug_states:state} [<area>]"
          - "cuántos dispositivos {bs_plug_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: plug

      # Power
      - sentences:
          - "está[n] <name> {bs_power_states:state} [<area>]"
          - "está[n] {bs_power_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: power
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "(hay|está[n]) (algo|[algún|algunos] dispositivo[s]) {bs_power_states:state}[s] [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "está[n] (todo|todos los dispositivos) {bs_power_states:state} [<area>]"
          - "está[n] {bs_power_states:state} (todo|todos los dispositivos) [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "(qué|cual[es]) [dispositivo[s]] (está[n]|hay) {bs_power_states:state} [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "cuántos dispositivos (están|hay) {bs_power_states:state} [<area>]"
          - "cuántos dispositivos {bs_power_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: power

      # Presence
      - sentences:
          - "está[n] <name> {bs_presence_states:state} [<area>]"
          - "está[n] {bs_presence_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: presence
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "(hay|está[n]) (algo|[algún|algunos] (dispositivo[s]|sensor[es] de presencia)) {bs_presence_states:state} [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "está[n] todo[s los (dispositivos|sensores de presencia)] {bs_presence_states:state} [<area>]"
          - "está[n] {bs_presence_states:state} todo[s los (dispositivos|sensores de presencia)] [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "(qué|cual[es]) [dispositivo[s]|sensor[es] de presencia] (hay|está[n]) {bs_presence_states:state} [<area>]"
          - "(qué|cual[es]) [dispositivo[s]|sensor[es] de presencia] {bs_presence_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "cuántos (dispositivos|sensores de presencia) (están|hay) {bs_presence_states:state} [<area>]"
          - "cuántos (dispositivos|sensores de presencia) {bs_presence_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: presence

      # Problem
      - sentences:
          - "(hay|existe) (algún problema|problemas) con <name> [<area>]"
          - "tiene <name> [algún] problema[s] [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: problem
        slots:
          domain: binary_sensor
          device_class: problem
          state: "on"

      # Running
      - sentences:
          - "está[n] <name> {bs_running_states:state} [<area>]"
          - "está[n] {bs_running_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: running
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "(hay|está[n]) (algo|[algún|algunos] dispositivo[s] {bs_running_states:state} [<area>]"
          - "(hay|está[n]) {bs_running_states:state} (algo|[algún|algunos] dispositivo[s]) [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "está[n] todo[s] [los dispositivos] {bs_running_states:state} [<area>]"
          - "está[n] {bs_running_states:state} todo[s] [los dispositivos] [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "(qué|cual[es]) [dispositivo[s]] (está[n]|hay) {bs_running_states:state} [<area>]"
          - "(qué|cual[es]) dispositivo[s] {bs_running_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "cuántos dispositivos (están|hay) {bs_running_states:state} [<area>]"
          - "cuántos dispositivos {bs_running_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: running

      # Safety
      - sentences:
          - "está[n] <name> {bs_safety_states:state} [<area>]"
          - "está[n] {bs_safety_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: safety
        slots:
          domain: binary_sensor
          device_class: safety

      # Smoke
      - sentences:
          - "está[n] <name> {bs_smoke_states:state} [<area>]"
          - "está[n] {bs_smoke_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: smoke
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "(hay|está[n]) [algún|algunos] sensor[es] de humo {bs_smoke_states:state} [<area>]"
          - "(hay|está[n]) {bs_smoke_states:state} [algún|algunos] sensor[es] de humo [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "(hay|se detecta) humo <area>"
        response: any
        slots:
          domain: binary_sensor
          device_class: smoke
          state: "on"

      - sentences:
          - "están todos los sensores de humo {bs_smoke_states:state} [<area>]"
          - "está[n] {bs_smoke_states:state} todos los sensores de humo [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "(qué|cual[es]) sensor[es] de humo (está[n]|hay) {bs_smoke_states:state} [<area>]"
          - "(qué|cual[es]) sensor[es] de humo {bs_smoke_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "cuántos sensores de humo (está[n]|hay) {bs_smoke_states:state} [<area>]"
          - "cuántos sensor[es] de humo {bs_smoke_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: smoke

      # Sound
      - sentences:
          - "está[n] <name> {bs_sound_states:state} [<area>]"
          - "está[n] {bs_sound_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: sound
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "(hay|está[n]) [algún|algunos] sensor[es] de (sonido|ruido) {bs_sound_states:state} [<area>]"
          - "(hay|está[n]) {bs_sound_states:state} [algún|algunos] sensor[es] de (ruido|sonido) [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "(hay|se detecta) (ruido|sonido) <area>"
        response: any
        slots:
          domain: binary_sensor
          device_class: sound
          state: "on"

      - sentences:
          - "están todos los sensores de (sonido|ruido) {bs_sound_states:state} [<area>]"
          - "están {bs_sound_states:state} todos los sensores de (ruido|sonido) [<area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "(qué|cual[es]) sensor[es] de (sonido|ruido) (hay|está[n]) {bs_sound_states:state} [<area>]"
          - "(qué|cual[es]) sensor[es] de (sonido|ruido) {bs_sound_states:state} hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "cuántos sensor[es] de (sonido|ruido) (hay|está[n]) {bs_sound_states:state} [<area>]"
          - "cuántos sensor[es] de (sonido|ruido) {bs_sound_states:state} hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: sound

      # Tamper
      - sentences:
          - "está[n] <name> {bs_tamper_states:state} [<area>]"
          - "está[n] {bs_tamper_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: tamper
        slots:
          domain: binary_sensor
          device_class: tamper

      # Update
      - sentences:
          - "está[n] <name> {bs_update_states:state} [<area>]"
          - "está[n] {bs_update_states:state} <name> [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: update
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - "hay [alguna[s]] actualizaci(ón|ones) [disponible] [<area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      - sentences:
          - "(qué|cual[es]) actualizaci(ón|ones) hay [disponibles] [<area>]"
          - "(qué|cual[es]) actualizaci(ón|ones) disponibles hay [<area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      - sentences:
          - "cuántas actualizaci(ón|ones) hay [disponibles] [<area>]"
          - "cuántas actualizaci(ón|ones) disponibles hay [<area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      # Vibration
      - sentences:
          - "está[n] {bs_vibration_states:state} <name> [<area>]"
          - "está[n] <name> {bs_vibration_states:state} [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: vibration
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - "hay algo vibrando [<area>]"
          - "se detecta [alguna] vibración [<area>]"
        response: any
        requires_context:
          domain: binary_sensor
          device_class: vibration
        slots:
          domain: binary_sensor
          device_class: vibration
          state: "on"

      # Window
      - sentences:
          - "está {bs_window_states:state} <name> [<area>]"
          - "está <name> {bs_window_states:state} [<area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: window
        slots:
          domain: binary_sensor
          device_class: window
