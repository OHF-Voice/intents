language: en
intents:
  HassGetState:
    data:
      # check state (one)
      - sentences:
          - (is|are) <name> {lock_states:state} [in <area>]
        requires_context:
          domain: lock
        response: one_short

      # check state (any)
      - sentences:
          - (is|are) [any] door[s] {lock_states:state} [in <area>]
        slots:
          domain: lock
        response: which_short

      # check state (all)
      - sentences:
          - (is|are) all [the] door[s] {lock_states:state} [in <area>]
        slots:
          domain: lock
        response: all_short

      # check state (which)
      - sentences:
          - (which|what) door[s] (is|are) {lock_states:state} [in <area>]
        slots:
          domain: lock
        response: which_short

      # check state (how many)
      - sentences:
          - how many door[s] (is|are) {lock_states:state} [in <area>]
          - how many door[s] (is|are) [there] in <area>
        slots:
          domain: lock
        response: how_many_short

      # get list (domain)
      - sentences:
          - (which|what) door[s] (is|are) in <area>
          - list all door[s] [in <area>]
        slots:
          domain: lock
        response: list_long
