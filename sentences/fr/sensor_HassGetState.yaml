language: fr
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/sensor/
      # Apparent power
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: apparent_power
        slots:
          domain: sensor
          device_class: apparent_power
        expansion_rules:
          class: "puissance[ apparente]"

      # AQI
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: aqi
        slots:
          domain: sensor
          device_class: aqi
        expansion_rules:
          class: "(qualité de l'air|pollution)"

      # Atmospheric pressure
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: atmospheric_pressure
        slots:
          domain: sensor
          device_class: atmospheric_pressure
        expansion_rules:
          class: "pression atmosphérique"

      # Battery
      - sentences:
          - "<what_is_the_class_of_name>"
          - "combien de batterie [<le>]{name} <atil>"
          - "combien de batterie reste-il dans [<le>]{name}"
        response: default
        requires_context:
          domain: sensor
          device_class: battery
        slots:
          domain: sensor
          device_class: battery
        expansion_rules:
          class: "[niveau de] batterie [restant]"

      # CO2
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: carbon_dioxide
        slots:
          domain: sensor
          device_class: carbon_dioxide
        expansion_rules:
          class: "[(niveau|concentration) de ](CO2|dioxyde de carbone)"

      # CO
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: carbon_monoxide
        slots:
          domain: sensor
          device_class: carbon_monoxide
        expansion_rules:
          class: "[(niveau|concentration) de ](CO|monoxyde de carbone)"

      # Current
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: current
        slots:
          domain: sensor
          device_class: current
        expansion_rules:
          class: "[quantité de] courant [(électrique|electrique)]"

      # # Data rate
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: data_rate
        slots:
          domain: sensor
          device_class: data_rate
        expansion_rules:
          class: "(vitesse de téléchargement|débit) [(montant[e]|descendant[e])]"

      # Data size
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: data_size
        slots:
          domain: sensor
          device_class: data_size
        expansion_rules:
          class: "(quantité|volume|taille) [(de|des)] [donné][e][s]"

      # Date
      - sentences:
          - "<what_is_the_class_of_name>"
          - "(Quand|Quel[l][e]) est [(le|la) prochain[e]] [(évènement|date)] [de] [<le>]{name}"
        response: default
        requires_context:
          domain: sensor
          device_class: date
        slots:
          domain: sensor
          device_class: date
        expansion_rules:
          class: "date"

      # Distance
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: distance
        slots:
          domain: sensor
          device_class: distance
        expansion_rules:
          class: "(distance|kilométr[ag][e][s])"

      # Duration
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: duration
        slots:
          domain: sensor
          device_class: duration
        expansion_rules:
          class: "durée"

      # Energy
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: energy
        slots:
          domain: sensor
          device_class: energy
        expansion_rules:
          class: "[quantité d']énergie"

      # Energy storage
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: energy_storage
        slots:
          domain: sensor
          device_class: energy_storage
        expansion_rules:
          class: "[(total|quantité)] [d']énergie stockée"

      # # Skipping enum

      # Frequency
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: frequency
        slots:
          domain: sensor
          device_class: frequency
        expansion_rules:
          class: "fréquence"

      # Gas
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: gas
        slots:
          domain: sensor
          device_class: gas
        expansion_rules:
          class: "[(Quantité|Volume) [de]] gaz"

      # Humidity
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: humidity
        slots:
          domain: sensor
          device_class: humidity
        expansion_rules:
          class: "[taux d']humidité[ (de l'air|relati(f|ve))]"

      # Illuminance
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: illuminance
        slots:
          domain: sensor
          device_class: illuminance
        expansion_rules:
          class: "[niveau de ]luminosité"

      # Irradiance
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: irradiance
        slots:
          domain: sensor
          device_class: irradiance
        expansion_rules:
          class: "[niveau d'](irradiance|irradiation)"

      # # Moisture
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: moisture
        slots:
          domain: sensor
          device_class: moisture
        expansion_rules:
          class: "[taux d']humidité[ (du sol| relati(f|ve))]"

      # Monetary
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: monetary
        slots:
          domain: sensor
          device_class: monetary
        expansion_rules:
          class: "(coût|montant)"

      # Nitrogen dioxide
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: nitrogen_dioxide
        slots:
          domain: sensor
          device_class: nitrogen_dioxide
        expansion_rules:
          class: "[(niveau|concentration) de ](dioxyde d'azote|NO2)"

      # Nitrogen monoxide
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: nitrogen_monoxide
        slots:
          domain: sensor
          device_class: nitrogen_monoxide
        expansion_rules:
          class: "[(niveau|concentration) de ](monoxyde d'azote|NO)"

      # Nitrous oxide
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: nitrous_oxide
        slots:
          domain: sensor
          device_class: nitrous_oxide
        expansion_rules:
          class: "[(niveau|concentration) de ](protoxyde d'azote|N2O)"

      # Ozone
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: ozone
        slots:
          domain: sensor
          device_class: ozone
        expansion_rules:
          class: "[(niveau|concentration) (d'|de )](ozone|O3)"

      # PM1
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: pm1
        slots:
          domain: sensor
          device_class: pm1
        expansion_rules:
          class: "[(niveau|concentration) de ](particules [fines]|PM1)"

      # PM2.5
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: pm25
        slots:
          domain: sensor
          device_class: pm25
        expansion_rules:
          class: "[(niveau|concentration) de ](particules [fines]|PM2.5)"

      # PM10
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: pm10
        slots:
          domain: sensor
          device_class: pm10
        expansion_rules:
          class: "[(niveau|concentration) de ](particules [fines]|PM10)"

      # Power factor
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: power_factor
        slots:
          domain: sensor
          device_class: power_factor
        expansion_rules:
          class: "facteur de puissance"

      # Power
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: power
        slots:
          domain: sensor
          device_class: power
        expansion_rules:
          class: "puissance"

      # Precipitation
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: precipitation
        slots:
          domain: sensor
          device_class: precipitation
        expansion_rules:
          class: "[cumul|quantité|niveau de ]((précipitation|precipitation)[s]|pluie|neige)"

      # Precipitation intensity
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: precipitation_intensity
        slots:
          domain: sensor
          device_class: precipitation_intensity
        expansion_rules:
          class: "intensité de ((précipitation|precipitation)[s]|pluie|neige)"

      # Pressure
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: pressure
        slots:
          domain: sensor
          device_class: pressure
        expansion_rules:
          class: "pression"

      # Reactive power
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: reactive_power
        slots:
          domain: sensor
          device_class: reactive_power
        expansion_rules:
          class: "puissance (réactive|reactive)"

      # Signal strength
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: signal_strength
        slots:
          domain: sensor
          device_class: signal_strength
        expansion_rules:
          class: "(force|puissance) (de|du) signal"

      # Sound pressure
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: sound_pressure
        slots:
          domain: sensor
          device_class: sound_pressure
        expansion_rules:
          class: "[puissance de ]pression acoustique"

      # Speed
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: speed
        slots:
          domain: sensor
          device_class: speed
        expansion_rules:
          class: "(vitesse|velocité|allure)"

      # Sulphur dioxide
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: sulphur_dioxide
        slots:
          domain: sensor
          device_class: sulphur_dioxide
        expansion_rules:
          class: "[(niveau|concentration) de ](dioxyde de soufre|SO2)"

      # Temperature
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: temperature
        slots:
          domain: sensor
          device_class: temperature
        expansion_rules:
          class: "(température|temperature)"

      # # Skipping Timestamp

      # Volatile organic compounds
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: volatile_organic_compounds
        slots:
          domain: sensor
          device_class: volatile_organic_compounds
        expansion_rules:
          class: "[(concentration|niveau) de ](VOC[s]|COV|composé[s] [organique[s]] volatil[s])"

      # Volatile organic compounds
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: volatile_organic_compounds_parts
        slots:
          domain: sensor
          device_class: volatile_organic_compounds_parts
        expansion_rules:
          class: "[(concentration|niveau) de ]particules de (VOC[s]|COV|composé[s] [organique[s]] volatil[s])"

      # Voltage
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: voltage
        slots:
          domain: sensor
          device_class: voltage
        expansion_rules:
          class: "volt[s][age]"

      # Volume
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: volume
        slots:
          domain: sensor
          device_class: volume
        expansion_rules:
          class: "volume"

      # Volume storage
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: volume_storage
        slots:
          domain: sensor
          device_class: volume_storage
        expansion_rules:
          class: "volume [total] [stocké]"

      # Water
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: water
        slots:
          domain: sensor
          device_class: water
        expansion_rules:
          class: "[(quantité|consommation) ][totale ][d']eau[ consommée]"

      # Weight
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: weight
        slots:
          domain: sensor
          device_class: weight
        expansion_rules:
          class: "(poids|masse)"

      # Wind speed
      - sentences:
          - "<what_is_the_class_of_name>"
        response: default
        requires_context:
          domain: sensor
          device_class: wind_speed
        slots:
          domain: sensor
          device_class: wind_speed
        expansion_rules:
          class: "[vitesse ][du ][vent]"
