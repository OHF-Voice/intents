language: ro
intents:
  HassGetState:
    data:
      - sentences:
          - "<name> [<din> <area>] e[ste] {lock_states_singular:state}"
          - "e[ste] {lock_states_singular:state} <name> [<din> <area>]"
        response: one_yesno
        requires_context:
          domain: lock
        slots:
          domain: lock

      - sentences:
          - "(e[ste] | exist(ă|a)) [<vreun>] <usa> {lock_states_singular:state} [<in> <area>]"
          - "(sunt | exist(ă|a)) <usile> {lock_states_plural:state} [<in> <area>]"
        response: any
        slots:
          domain: lock

      - sentences:
          - "sunt toate <usile> {lock_states_plural:state} [<in> <area>]"
          - "toate <usile> sunt {lock_states_plural:state} [<in> <area>]"
        response: all
        slots:
          domain: lock

      - sentences:
          - "<care> <usa> e[ste] {lock_states_singular:state} [<in> <area>]"
          - "<care> <usile> sunt {lock_states_plural:state} [<in> <area>]"
        response: which
        slots:
          domain: lock

      - sentences:
          - "<cate> <usile> sunt {lock_states_plural:state} [<in> <area>]"
        response: how_many
        slots:
          domain: lock
