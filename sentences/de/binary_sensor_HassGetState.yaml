language: de
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/binary_sensor/
      # Battery
      - sentences:
          - "ist <name> [<batterie>] [<area>] {bs_battery_states:state}"
          - "ist [<ladestand>] <batterie> <von_dem> <name> [<area>] {bs_battery_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: battery
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "(ist|sind) <irgend> <batterie> [<area>] {bs_battery_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "sind <alle> <batterie> [<area>] {bs_battery_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "<welche> <batterie> [<area>] (ist|sind) {bs_battery_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "wie viele <batterie> [<area>] (ist|sind) {bs_battery_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: battery

      # Battery charging
      - sentences:
          - "wird <name> [<batterie>] [<area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state} <name> [<batterie>] [<area>] [auf]"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: battery_charging
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "(wird|werden) <irgend> <batterie> [<area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state} <irgend> <batterie> [<area>] [auf]"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "werden <alle> <batterie> [<area>] {bs_battery_charging_states:state}"
          - "{bs_battery_charging_states:state} <alle> <batterie> [<area>] [auf]"
        response: alle
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<welche> <batterie> [<area>] [wird|werden] {bs_battery_charging_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "wie viele <batterie> [<area>] [werden] {bs_battery_charging_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: battery_charging

      # Carbon monoxide
      - sentences:
          - "(ist|wurde) <name> [<area>] {bs_carbon_monoxide_states:state}"
        response: einzeln_janein
        requires_context:
          domain: binary_sensor
          device_class: carbon_monoxide
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(ist|sind|wurde[n]) <irgend> <co-sensor> [<area>] {bs_carbon_monoxide_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(gibt es|ist) [<irgend>] <co> <area>"
          - "(wird|wurde) [<irgend>] <co> <area> {bs_carbon_monoxide_states:state}"
        response: irgendeins
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide
          state: "on"

      - sentences:
          - "(sind|wurden) <alle> <co-sensor> [<area>] {bs_carbon_monoxide_states:state}"
        response: alle
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "<welche> <co-sensor> (ist|sind|wurde[n]) [<area>] {bs_carbon_monoxide_states:state}"
        response: welches
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "wie viele <co-sensor> (sind|wurden) [<area>] {bs_carbon_monoxide_states:state}"
        response: wie_viele
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide
